@use "sass:color";
@use "sass:map";
@use "../colors";

.card {
  background-color: var(--card-bg);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.125);
  padding: 1rem;
  border-radius: 0.5rem;
  overflow: hidden;
  transition: 0.125s ease-in-out;
  transition-property: transform, box-shadow;

  &.card--sunken {
    box-shadow: none;
    background-color: rgba(map.get(colors.$palette, smoke), 0.75);
  }

  &.b--warning {
    box-shadow:
      0 0 2px 0 rgba(map.get(colors.$palette, warning), 0.0625),
      0 4px 8px 0 rgba(map.get(colors.$palette, warning), 0.125);
  }

  &.b--info {
    box-shadow:
      0 0 2px 0 rgba(map.get(colors.$palette, info), 0.0625),
      0 4px 8px 0 rgba(map.get(colors.$palette, info), 0.125);
  }

  :not(.draggable-source--is-dragging) > &.card--hover:hover,
  &.card--hover:focus {
    transform: translateY(-3px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1875);
  }

  &.card--hover:active {
    transform: translateY(-1px);
  }

  &.card--background-image {
    background-position: center center;
    background-repeat: no-repeat;
    background-size: cover;
    background-image: linear-gradient(
        rgba(255, 255, 255, 0.75) 0%,
        rgba(255, 255, 255, 0.95) 90%
      ),
      var(--bg-image);

    @media (prefers-color-scheme: dark) {
      background-image: linear-gradient(
          rgba(37, 36, 41, 0.5) 0%,
          rgba(37, 36, 41, 0.85) 75%
        ),
        var(--bg-image);
    }
  }
}

.draggable-mirror {
  z-index: 999;
}

.draggable-source--is-dragging .card {
  opacity: 0.5;
}

a.card {
  text-decoration: none;
}

.card h1,
.card h2 {
  margin-right: 0;
  width: 100%;
}

.card__darker {
  background: map.get(colors.$palette, snow);
}

.card__banner {
  margin: 0 -1rem;
  padding: 0.75rem 1rem;
  line-height: 1.25;
}
.card__banner--top {
  margin-top: -1rem;
  margin-bottom: 1rem;
}
.card__banner--bottom {
  margin-top: 1rem;
  margin-bottom: -1rem;
}

.error-card {
  @extend .card;
  max-width: 32rem;
  border: 1px solid map.get(colors.$palette, error);
  margin-bottom: 1.5rem;
  box-shadow:
    0 0 2px 0 rgba(map.get(colors.$palette, error), 0.025),
    0 4px 8px 0 rgba(map.get(colors.$palette, error), 0.125);

  h2 {
    color: map.get(colors.$palette, error);
    border-bottom-color: map.get(colors.$palette, primary);
    margin-top: 0;
    font-size: 1.25rem;
  }

  ul {
    margin-bottom: 0;
    padding-left: 1.5rem;
  }
}

//.banner {
//  @extend .card;
//  max-width: 36rem;
//  margin-left: auto;
//  margin-right: auto;
//  padding: 1rem;
//  text-align: center;
//  text-wrap: balance;
//  line-height: 1.25;
//}
//.banner--archived {
//  background-color: lighten(map-get($palette, pending), 40%);
//  border: 1px solid map-get($palette, pending);
//  color: map-get($palette, slate);
//  a {
//    color: inherit;
//  }
//  .mention {
//    margin: 0 0.125rem;
//    color: inherit;
//    font-weight: inherit;
//  }
//}

.flash {
  @extend .card;
  border: 1px solid currentColor;
  font-weight: 500;
  max-width: 24rem;
  padding: 0.5rem 0.75rem 0.5rem 1rem;

  &.success {
    color: map.get(colors.$palette, success);
    background-color: rgba(map.get(colors.$palette, success), 0.125);
  }
  &.info {
    color: map.get(colors.$palette, info);
    background-color: rgba(map.get(colors.$palette, info), 0.125);
  }
  &.error {
    color: map.get(colors.$palette, error);
    background-color: rgba(map.get(colors.$palette, error), 0.125);
  }
}

.card--promo {
  background-size: cover;
  background-position: center center;
  color: white !important;
}

.card--sunset {
  background-image: url('https://cloud-awvmmj0xe.vercel.app/sunset_card.png');
}

.card--breakdown {
  @extend .card;
  // @extend .border;
  padding: 20px;
  padding-top: 0px;
  padding-bottom: 24px;
  border: 1px solid map.get(colors.$palette, smoke);

  & .error {
    color: color.adjust(color.adjust(map.get(colors.$palette, error), $lightness: 40%), $saturation: 60%);
  }
}

#card-pin {
  width: 64px;
}
