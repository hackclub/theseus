@use "sass:color";
@use "sass:map";
@use "../colors";

// Numeric count badge, see the badge_for helper
.badge {
  display: inline-flex;
  flex-shrink: none;
  align-items: center;
  background-color: map.get(colors.$palette, primary);
  color: colors.$white;
  border-radius: 9999px;
  gap: 0.25rem;
  font-size: 0.75rem;
  font-weight: 500;
  letter-spacing: 0.01em;
  font-variant-numeric: tabular-nums;
  line-height: 1.125;
  margin-left: 1rem;
  padding: 0.25rem 0.625rem;

  &.success {
    background-color: rgba(map.get(colors.$palette, success), 0.2);
    color: color.adjust(map.get(colors.$palette, success), $lightness: -10%);

    @media (prefers-color-scheme: dark) {
      background-color: rgba(map.get(colors.$palette, success), 0.125);
      color: map.get(colors.$palette, success);
    }
  }
  &.pending {
    background-color: rgba(map.get(colors.$palette, pending), 0.125);
    color: map.get(colors.$palette, pending);
  }
  &.warning {
    background-color: rgba(map.get(colors.$palette, warning), 0.125);
    color: map.get(colors.$palette, warning);
  }
  &.purple {
    background-color: rgba(map.get(colors.$palette, purple), 0.125);
    color: map.get(colors.$palette, purple);
  }
  &.ai {
    background-color: rgba(map.get(colors.$palette, ai), 0.125);
    color: map.get(colors.$palette, ai);
  }
  &.error {
    background-color: rgba(map.get(colors.$palette, error), 0.125);
    color: map.get(colors.$palette, error);

    @media (prefers-color-scheme: dark) {
      background-color: rgba(map.get(colors.$palette, error), 0.3);
      color: color.adjust(color.adjust(map.get(colors.$palette, error), $saturation: 20%), $lightness: 40%);
    }
  }
  &.info {
    background-color: rgba(map.get(colors.$palette, info), 0.125);
    color: map.get(colors.$palette, info);
  }
  &.bg-accent {
    background-color: rgba(map.get(colors.$palette, accent), 0.125);
    color: map.get(colors.$palette, accent);
  }
  &.bg-muted {
    background-color: rgba(map.get(colors.$palette, muted), 0.125);
    color: map.get(colors.$palette, slate);
  }
  &.muted {
    background-color: map.get(colors.$palette, muted);
    color: colors.$white;
  }

  &.badge-large {
    padding: 0.3rem 1rem;
    gap: 0.5rem;
  }

  &.tx-tag {
    font-weight: normal;
    background-color: transparent;
    color: map.get(colors.$palette, slate);
    border: 1px solid;
    border-color: rgba(0, 0, 0, 0.125);
    border-width: 0.5px;
    max-width: 20rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .heading > & {
    margin-left: 0;
  }
}

.list-badge {
  display: inline-flex;
  flex-shrink: none;
  align-items: center;
  color: map.get(colors.$palette, muted);
  border: 1px solid;
  border-color: rgba(0, 0, 0, 0.125);
  border-width: 0.5px;
  border-radius: 9999px;
  background-color: rgba(255, 255, 255, 0.25);
  font-size: 0.75rem;
  font-weight: 500;
  line-height: 1.125;
  padding: 0.125rem 0.375rem;
  margin-left: 0.5rem;
}

.list-badge.quick-action {
  font-size: 16px;
  padding: 0.25rem 0.675rem;
  gap: 4px;
  text-decoration: none;
}

.list-badge.quick-action:hover {
  color: map.get(colors.$palette, info);
}

// Circular button
.pop {
  border-radius: 9999px;
  color: map.get(colors.$palette, info);
  background-color: rgba(map.get(colors.$palette, info), 0.125);
  flex-shrink: 0;
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 0.875rem;
  height: 36px;
  width: 36px;
  transition: box-shadow 0.125s ease-in-out;
  outline: none;
  border: none;

  &[disabled] {
    opacity: 0.5;
    pointer-events: none;
  }

  &:hover,
  &:focus {
    box-shadow: 0 0 0 2px currentColor;
  }

  &.no_hover:hover,
  &.no_hover:focus {
    box-shadow: none !important;
  }

  &.success {
    background-color: rgba(map.get(colors.$palette, success), 0.125);
  }

  &.pending {
    background-color: rgba(map.get(colors.$palette, pending), 0.125);
  }
  &.warning {
    background-color: rgba(map.get(colors.$palette, warning), 0.125);
  }
  &.purple {
    background-color: rgba(map.get(colors.$palette, purple), 0.125);
  }
  &.error {
    background-color: rgba(map.get(colors.$palette, error), 0.125);
  }
  &.purple {
    background-color: rgba(map.get(colors.$palette, purple), 0.125);
  }
  &.ai {
    background-color: rgba(map.get(colors.$palette, ai), 0.125);
  }
  &.muted {
    background-color: rgba(map.get(colors.$palette, muted), 0.125);
  }
}
summary.pop::-webkit-details-marker {
  display: none;
}

// Small dots for indicating row status
.status {
  border-radius: 4px;
  display: inline-block;
  margin-right: 4px;
  height: 8px;
  width: 8px;
  position: relative;
  bottom: 2px;
}

.timestamp {
  color: map.get(colors.$palette, muted);
}
// User mentions, use the user_mention helper
.mention {
  color: map.get(colors.$palette, muted);
  display: inline-flex;
  align-items: center;
  font-weight: 500;
  margin-right: 0.25rem;
  text-decoration: none;
  vertical-align: middle;
  white-space: nowrap;

  img,
  img + svg {
    width: 1.5rem;
    vertical-align: middle;
    border-radius: 50%;
    overflow: hidden;
    user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    -webkit-user-select: none;
  }

  img {
    margin-right: 0.5rem;

    + svg {
      margin: 0 -0.2rem 0 -0.625rem;
    }
  }

  svg:first-child {
    vertical-align: bottom;
  }
}

.mention.badge {
  display: inline-flex;
  align-items: center;
  font-size: 0.9em;
}
